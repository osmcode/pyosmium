name: Build

on:
  push:
    tags:
      - v**

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-13, macos-latest]
        vcpkg: [none]
        include:
         - os: windows-latest
           vcpkg: 'C:/vcpkg/installed/x64-windows'
         - os: windows-11-arm
           vcpkg: 'C:/vcpkg/installed/arm64-windows'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install requirements
        run: python -m pip install cibuildwheel build

      - name: Get dependencies via sdist
        run: python -m build --sdist

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        shell: bash
        env:
           CIBW_ENABLE: cpython-freethreading
           CIBW_ARCHS: "native"
           CIBW_SKIP: "*musllinux*"
           CIBW_TEST_REQUIRES: pytest pytest-httpserver
           CIBW_TEST_COMMAND: pytest {project}/test
           CIBW_BUILD_FRONTEND: build
           CIBW_BEFORE_BUILD_LINUX: yum install -y expat-devel boost-devel zlib-devel bzip2-devel lz4-devel
           CIBW_BEFORE_BUILD_MACOS: brew install boost
           CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=11.0 SKBUILD_CMAKE_ARGS=-DWITH_LZ4=OFF
           CIBW_BEFORE_BUILD_WINDOWS: vcpkg install bzip2 expat zlib boost-variant boost-iterator lz4
           CIBW_ENVIRONMENT_WINDOWS: 'CMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake"'
           CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: 'pipx run delvewheel repair --add-path ${{ matrix.vcpkg }}/bin/ --add-path ${{ matrix.vcpkg }}/debug/bin -w {dest_dir} {wheel}'

      - uses: actions/upload-artifact@v4
        with:
          name: pyosmium-wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
